enum QuizFeedback {
  veryLow(0, 0.0, 0.0,
      'Parece que este quiz foi um verdadeiro desafio para vocÃª. Mas nÃ£o desanime! Cada erro Ã© uma oportunidade de aprendizado. Que tal revisar o conteÃºdo e tentar novamente? VocÃª tem potencial para melhorar! ðŸ’ª'),
  low(1, 0.01, 0.4,
      'VocÃª conseguiu algumas respostas certas! Isso jÃ¡ Ã© um comeÃ§o. Ainda hÃ¡ espaÃ§o para melhorar, entÃ£o que tal revisar alguns conceitos e tentar mais uma vez? Com um pouco mais de atenÃ§Ã£o, tenho certeza de que seu resultado serÃ¡ ainda melhor! ðŸš€'),
  medium(2, 0.41, 0.6,
      'Bom trabalho! VocÃª jÃ¡ entendeu uma boa parte do conteÃºdo, mas ainda pode melhorar. Revise os erros e tente novamente para reforÃ§ar o que aprendeu. VocÃª estÃ¡ no caminho certo! ðŸ“š'),
  high(3, 0.61, 0.8,
      'Ã“timo desempenho! VocÃª estÃ¡ quase lÃ¡! Faltou pouco para acertar tudo. Revise os detalhes que ficaram para trÃ¡s e da prÃ³xima vez, tenho certeza de que alcanÃ§arÃ¡ um resultado ainda melhor! ðŸ”¥'),
  veryHigh(4, 0.81, 1.0,
      'IncrÃ­vel! VocÃª mandou muito bem no quiz! Seu desempenho foi excelente e mostra que vocÃª domina bem o assunto. Continue assim e siga aprendendo cada vez mais! ðŸš€');

  final int level;
  final double minPercentage;
  final double maxPercentage;
  final String message;

  const QuizFeedback(
      this.level, this.minPercentage, this.maxPercentage, this.message);

  static QuizFeedback getFeedback(double scorePercentage) {
    return QuizFeedback.values.firstWhere(
      (feedback) =>
          scorePercentage >= feedback.minPercentage &&
          scorePercentage <= feedback.maxPercentage,
      orElse: () =>
          QuizFeedback.veryLow,
    );
  }
}
